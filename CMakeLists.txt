cmake_minimum_required(VERSION 3.7.2)
project(Project-Alpha)

set(CMAKE_CXX_STANDARD 17)

include_directories(${PROJECT_SOURCE_DIR}/lib)

set(SOURCE
        lib/imgui/imconfig.h
                                            lib/imgui/imgui.cpp
        lib/imgui/imgui.h
                                            lib/imgui/imgui_demo.cpp
                                            lib/imgui/imgui_draw.cpp
        lib/imgui/imgui_internal.h
                                            lib/imgui/imgui_tables.cpp
                                            lib/imgui/imgui_widgets.cpp
        lib/imgui/imstb_rectpack.h
        lib/imgui/imstb_textedit.h
        lib/imgui/imstb_truetype.h


        lib/imgui-sfml/imgui-SFML.cpp       lib/imgui-sfml/imgui-SFML.cpp
        lib/imgui-sfml/imgui-SFML_export.h


                                            src/main.cpp
        src/core/constants.hpp
        src/core/core.hpp                   src/core/core.cpp
        src/core/perlin_noise.hpp           src/core/perlin_noise.cpp
        src/core/random_number_gen.hpp

        src/gfx/gfx.hpp                     src/gfx/gfx.cpp
        src/gfx/renderable.hpp              src/gfx/renderable.cpp
        src/gfx/tilemap.hpp                 src/gfx/tilemap.cpp

        src/world/terrain/terrain.hpp       src/world/terrain/terrain.cpp
        src/world/terrain/terrain_gen.hpp

        src/world/area.hpp                  src/world/area.cpp
        src/world/location.hpp              src/world/location.cpp
        src/world/tile.hpp                  src/world/tile.cpp)


IF(UNIX)
    set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/cmake")
ENDIF(UNIX)

IF(WIN32 OR MSVC)
    cmake_policy(SET CMP0074 NEW)
    set(SFML_DIR "${PROJECT_SOURCE_DIR}/win-lib/SFML/lib/cmake/SFML")
    set(SFML_STATIC_LIBRARIES TRUE)

    set(CompilerFlags
            CMAKE_CXX_FLAGS
            CMAKE_CXX_FLAGS_DEBUG
            CMAKE_CXX_FLAGS_RELEASE
            CMAKE_C_FLAGS
            CMAKE_C_FLAGS_DEBUG
            CMAKE_C_FLAGS_RELEASE
            )
    foreach(CompilerFlag ${CompilerFlags})
        string(REPLACE "/MD" "/MT" ${CompilerFlag} "${${CompilerFlag}}")
    endforeach()
ENDIF(WIN32 OR MSVC)

add_executable(palpha ${SOURCE})

find_package(SFML 2.5 COMPONENTS system graphics window REQUIRED)

set(OpenGL_GL_PREFERENCE "GLVND")
find_package(OpenGL REQUIRED)

if (SFML_FOUND)
    target_link_libraries(palpha sfml-graphics OpenGL::GL)
endif ()